#!/bin/sh -e
# Script to dispatch NetworkManager events
#
# Runs ifupdown scripts when NetworkManager fiddles with interfaces.
# See NetworkManager(8) for further documentation of the dispatcher events.

if [ -z "$1" ]; then
    echo "$0: called with no interface" 1>&2
    exit 1;
fi

wait_for_process() {
  PNAME=$1
  PID=`/usr/bin/pgrep $PNAME`
  while [ -z "$PID" ]; do
        sleep 3;
        PID=`/usr/bin/pgrep $PNAME`
  done
}

#launch the browser, but on boot we need to wait that nm-applet starts
start_browser() {
     wait_for_process nm-applet
     logger -s "[CapNetAssist] Running browser as '$user' to login in captive portal"
     su $user -c "captive-login 2>/dev/null || sensible-browser start.elementaryos.org 2>/dev/null"
}

# Run the right scripts
case "$2" in
    up|vpn-up)
    logger -s "[CapNetAssist] DetectCaptivePortal script triggered"

    #set the DISPLAY where to show the browser
    if [ -z $DISPLAY ];then
        export DISPLAY=':0'
    fi

    logger -s "[CapNetAssist] Display set"

    #get the username
    user=$(who | grep "$DISPLAY" | awk '{print $1}' | tail -n1)

    #get HTTP response from google, should always return 204...
    res=$(curl -sL -w "%{http_code}\\n" "http://clients3.google.com/generate_204" -o /dev/null)
    logger -s "[CapNetAssist] HTTP response is: $res"

    #... so when it returns something different than 204 we have a walled garden (HTTP request redirected to login page)
    if [ $res = 204 ];
    then
        logger -s "[CapNetAssist] Connection already established"
    else
        if [ $res = 200]; then
            logger -s "[CapNetAssist] HTTP response should be 204. We are in a walled garden"
            start_browser
        fi
    fi
    ;;
    *)
    echo "$0: called with unknown action \`$2'" 1>&2
    exit 1
    ;;
esac
